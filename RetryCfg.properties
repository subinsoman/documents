#after crossing liveThreshold limit ,msg will store in database
liveThreshold=50
#below backendThreshold limit ,msg will take from database
backendThreshold=20
#msg is going to control on this number with SMSC
tps=150
#maximum attempts allow for one failure msg with SMSC
maxAttempts=10
#retryInterval in millisecond(after crossing this interval retry should do with SMSC)
retryInterval=500000
#msgExpiryAfterFirstAttempts in millisecond(never send to SMSC after crossing this interval)
msgExpiryIntervalAfterFirstAttempts=86400000
#Maximum thread should maintain with inserting data in database(based on connectionpool size)
maxInPoolLimit=10
#Maximum thread should maintain with send data to SMSC(its shouldnt less than tps vlaue,approximately 1.25 times of tps value)
#incase  synchSubmitSm=retrySubmitSm then asynchronious response process happening with 
#smsc ,then max 5 threads is enough to handle around 500 tps
maxTpsPoolLimit=4
#feature id configured inside http-feature-config.xml for synchronize SubmitSm call
synchSubmitSm=synch_submit_sm
#Without considering the smscid ,distribute data(SubmitSM) with mutiple session
roundRobinSupport=true
